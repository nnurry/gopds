// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.2
// source: meta.proto

package meta

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ENUMS
type FilterType int32

const (
	FilterType_STANDARD_BLOOM FilterType = 0
	FilterType_REDIS_BLOOM    FilterType = 1
)

// Enum value maps for FilterType.
var (
	FilterType_name = map[int32]string{
		0: "STANDARD_BLOOM",
		1: "REDIS_BLOOM",
	}
	FilterType_value = map[string]int32{
		"STANDARD_BLOOM": 0,
		"REDIS_BLOOM":    1,
	}
)

func (x FilterType) Enum() *FilterType {
	p := new(FilterType)
	*p = x
	return p
}

func (x FilterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterType) Descriptor() protoreflect.EnumDescriptor {
	return file_meta_proto_enumTypes[0].Descriptor()
}

func (FilterType) Type() protoreflect.EnumType {
	return &file_meta_proto_enumTypes[0]
}

func (x FilterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterType.Descriptor instead.
func (FilterType) EnumDescriptor() ([]byte, []int) {
	return file_meta_proto_rawDescGZIP(), []int{0}
}

type CardinalType int32

const (
	CardinalType_STANDARD_HLL CardinalType = 0
	CardinalType_REDIS_HLL    CardinalType = 1
)

// Enum value maps for CardinalType.
var (
	CardinalType_name = map[int32]string{
		0: "STANDARD_HLL",
		1: "REDIS_HLL",
	}
	CardinalType_value = map[string]int32{
		"STANDARD_HLL": 0,
		"REDIS_HLL":    1,
	}
)

func (x CardinalType) Enum() *CardinalType {
	p := new(CardinalType)
	*p = x
	return p
}

func (x CardinalType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CardinalType) Descriptor() protoreflect.EnumDescriptor {
	return file_meta_proto_enumTypes[1].Descriptor()
}

func (CardinalType) Type() protoreflect.EnumType {
	return &file_meta_proto_enumTypes[1]
}

func (x CardinalType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CardinalType.Descriptor instead.
func (CardinalType) EnumDescriptor() ([]byte, []int) {
	return file_meta_proto_rawDescGZIP(), []int{1}
}

// ------------------------------------------------------------------------
// MESSAGES
type MetaField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UtcNow *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=utc_now,json=utcNow,proto3" json:"utc_now,omitempty"`
	Key    string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value  string                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MetaField) Reset() {
	*x = MetaField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaField) ProtoMessage() {}

func (x *MetaField) ProtoReflect() protoreflect.Message {
	mi := &file_meta_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaField.ProtoReflect.Descriptor instead.
func (*MetaField) Descriptor() ([]byte, []int) {
	return file_meta_proto_rawDescGZIP(), []int{0}
}

func (x *MetaField) GetUtcNow() *timestamppb.Timestamp {
	if x != nil {
		return x.UtcNow
	}
	return nil
}

func (x *MetaField) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MetaField) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type FilterField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           FilterType `protobuf:"varint,1,opt,name=type,proto3,enum=meta.FilterType" json:"type,omitempty"`
	MaxCardinality uint32     `protobuf:"varint,2,opt,name=max_cardinality,json=maxCardinality,proto3" json:"max_cardinality,omitempty"`
	ErrorRate      float32    `protobuf:"fixed32,3,opt,name=error_rate,json=errorRate,proto3" json:"error_rate,omitempty"`
}

func (x *FilterField) Reset() {
	*x = FilterField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterField) ProtoMessage() {}

func (x *FilterField) ProtoReflect() protoreflect.Message {
	mi := &file_meta_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterField.ProtoReflect.Descriptor instead.
func (*FilterField) Descriptor() ([]byte, []int) {
	return file_meta_proto_rawDescGZIP(), []int{1}
}

func (x *FilterField) GetType() FilterType {
	if x != nil {
		return x.Type
	}
	return FilterType_STANDARD_BLOOM
}

func (x *FilterField) GetMaxCardinality() uint32 {
	if x != nil {
		return x.MaxCardinality
	}
	return 0
}

func (x *FilterField) GetErrorRate() float32 {
	if x != nil {
		return x.ErrorRate
	}
	return 0
}

type CardinalField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type CardinalType `protobuf:"varint,1,opt,name=type,proto3,enum=meta.CardinalType" json:"type,omitempty"`
}

func (x *CardinalField) Reset() {
	*x = CardinalField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardinalField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardinalField) ProtoMessage() {}

func (x *CardinalField) ProtoReflect() protoreflect.Message {
	mi := &file_meta_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardinalField.ProtoReflect.Descriptor instead.
func (*CardinalField) Descriptor() ([]byte, []int) {
	return file_meta_proto_rawDescGZIP(), []int{2}
}

func (x *CardinalField) GetType() CardinalType {
	if x != nil {
		return x.Type
	}
	return CardinalType_STANDARD_HLL
}

type IngestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta     *MetaField     `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Filter   *FilterField   `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Cardinal *CardinalField `protobuf:"bytes,3,opt,name=cardinal,proto3" json:"cardinal,omitempty"`
}

func (x *IngestRequest) Reset() {
	*x = IngestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestRequest) ProtoMessage() {}

func (x *IngestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meta_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestRequest.ProtoReflect.Descriptor instead.
func (*IngestRequest) Descriptor() ([]byte, []int) {
	return file_meta_proto_rawDescGZIP(), []int{3}
}

func (x *IngestRequest) GetMeta() *MetaField {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *IngestRequest) GetFilter() *FilterField {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *IngestRequest) GetCardinal() *CardinalField {
	if x != nil {
		return x.Cardinal
	}
	return nil
}

type BatchIngestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *BatchIngestResponse) Reset() {
	*x = BatchIngestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchIngestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchIngestResponse) ProtoMessage() {}

func (x *BatchIngestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meta_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchIngestResponse.ProtoReflect.Descriptor instead.
func (*BatchIngestResponse) Descriptor() ([]byte, []int) {
	return file_meta_proto_rawDescGZIP(), []int{4}
}

func (x *BatchIngestResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_meta_proto protoreflect.FileDescriptor

var file_meta_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x68, 0x0a, 0x09, 0x4d, 0x65, 0x74, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x33, 0x0a, 0x07, 0x75, 0x74, 0x63, 0x5f, 0x6e, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x75,
	0x74, 0x63, 0x4e, 0x6f, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x7b, 0x0a,
	0x0b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x24, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x61, 0x78,
	0x43, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x61, 0x74, 0x65, 0x22, 0x37, 0x0a, 0x0d, 0x43, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x08, 0x63, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x22, 0x2f, 0x0a, 0x13, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49,
	0x6e, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2a, 0x31, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x41, 0x52,
	0x44, 0x5f, 0x42, 0x4c, 0x4f, 0x4f, 0x4d, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x45, 0x44,
	0x49, 0x53, 0x5f, 0x42, 0x4c, 0x4f, 0x4f, 0x4d, 0x10, 0x01, 0x2a, 0x2f, 0x0a, 0x0c, 0x43, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54,
	0x41, 0x4e, 0x44, 0x41, 0x52, 0x44, 0x5f, 0x48, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x52, 0x45, 0x44, 0x49, 0x53, 0x5f, 0x48, 0x4c, 0x4c, 0x10, 0x01, 0x32, 0x4e, 0x0a, 0x0b, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0b, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x67, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x42, 0x25, 0x5a, 0x23, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x6e, 0x75, 0x72, 0x72, 0x79,
	0x2f, 0x67, 0x6f, 0x70, 0x64, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x65,
	0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_meta_proto_rawDescOnce sync.Once
	file_meta_proto_rawDescData = file_meta_proto_rawDesc
)

func file_meta_proto_rawDescGZIP() []byte {
	file_meta_proto_rawDescOnce.Do(func() {
		file_meta_proto_rawDescData = protoimpl.X.CompressGZIP(file_meta_proto_rawDescData)
	})
	return file_meta_proto_rawDescData
}

var file_meta_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_meta_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_meta_proto_goTypes = []any{
	(FilterType)(0),               // 0: meta.FilterType
	(CardinalType)(0),             // 1: meta.CardinalType
	(*MetaField)(nil),             // 2: meta.MetaField
	(*FilterField)(nil),           // 3: meta.FilterField
	(*CardinalField)(nil),         // 4: meta.CardinalField
	(*IngestRequest)(nil),         // 5: meta.IngestRequest
	(*BatchIngestResponse)(nil),   // 6: meta.BatchIngestResponse
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_meta_proto_depIdxs = []int32{
	7, // 0: meta.MetaField.utc_now:type_name -> google.protobuf.Timestamp
	0, // 1: meta.FilterField.type:type_name -> meta.FilterType
	1, // 2: meta.CardinalField.type:type_name -> meta.CardinalType
	2, // 3: meta.IngestRequest.meta:type_name -> meta.MetaField
	3, // 4: meta.IngestRequest.filter:type_name -> meta.FilterField
	4, // 5: meta.IngestRequest.cardinal:type_name -> meta.CardinalField
	5, // 6: meta.BatchIngest.BatchIngest:input_type -> meta.IngestRequest
	6, // 7: meta.BatchIngest.BatchIngest:output_type -> meta.BatchIngestResponse
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_meta_proto_init() }
func file_meta_proto_init() {
	if File_meta_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_meta_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*MetaField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*FilterField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CardinalField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*IngestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*BatchIngestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_meta_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_meta_proto_goTypes,
		DependencyIndexes: file_meta_proto_depIdxs,
		EnumInfos:         file_meta_proto_enumTypes,
		MessageInfos:      file_meta_proto_msgTypes,
	}.Build()
	File_meta_proto = out.File
	file_meta_proto_rawDesc = nil
	file_meta_proto_goTypes = nil
	file_meta_proto_depIdxs = nil
}
